generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Transaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  transactionType String
  categoryId      String   @db.ObjectId
  category        Category @relation(fields: [categoryId], references: [id])
  amount          String
  title           String
  date            String
  description     String
  userId          String?  @db.ObjectId
  user            User?    @relation(fields: [userId], references: [id])

  @@map("transactions")
}

model Category {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  icon         String
  bgColor      String
  badgeColor   String
  userId       String?       @db.ObjectId
  user         User?         @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("categories")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  transactions  Transaction[]
  Category      Category[]

  @@map("users")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
